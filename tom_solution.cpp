// 240123CodeLabs.cpp : This file contains the 'main' function. Program execution begins and ends there.
//

#include <cstdio>
#include <cstdlib>
#include <time.h>
#include <atlstr.h>
#include <stdio.h>
#include <stdlib.h>
#include <time.h>

int main()
{
    /*  Problem Definition
    https://github.com/VC-CodeLabs/Subarray_Odyssey
    Given an integer array nums, find the contiguous subarray (containing at least one number) that has the largest sum
    and return both its sum and the starting and ending indices of this subarray.

    Example 1: Input: nums = [-2, 1, -3, 4, -1, 2, 1, -5, 4] Output: Sum = 6, Subarray Indices = [3, 6]
    Explanation: The subarray [4, -1, 2, 1] has the largest sum = 6. The starting index of this subarray is 3 and the ending index is 6.

    Example 2: Input: nums = [5, -12, 3, 2, 9, -10, 4] Output: Sum = 14, Subarray Indices = [2, 4]
    Explanation: The subarray [3, 2, 9] has the largest sum = 14. The starting index of this subarray is 2 and the ending index is 4.

    Challenge Constraints Array Size: The input array may contain up to 10^6 integers.
    Number Range: The integers in the input array will range from -2,147 to 2,147.
    Non-Empty Subarray: Every valid input array will contain at least one integer.
    */

    // Set up input array
    //int nums[] = {-2, 1, -3, 4, -1, 2, 1, -5, 4};
    //int nums[] = {5, -12, 3, 2, 9, -10, 4};
    //int nums[] = {10, -3, 4, -1, 2, 1, -5, 4, 2, -1, 6, -2, 8, -9, 3, -7, 5, 3, -2, 1};

    // Code to generate an array with 1000 random numbers
    // I used this to create the large sample below
    /*
    srand(time(0));
    int nums[1000];
    for (int x = 0; x < 1000; x++)
    {
        nums[x] = rand() % 4295 - 2147;
        printf("%d, ", nums[x]);
        if (x > 0 && x % 20 == 0)
            printf("\n");
    }
    */
    int nums[] = {1064, 782, 1973, -549, -1893, -1708, 463, -74, -180, -1174, 479, -1725, 1763, 865, 63, 1934, 1245, -453, 1658, -269, -1055,
        1377, -1813, -531, -1165, -286, -1356, -1641, 364, -31, -284, -774, -1287, 2075, -1270, 1068, 1059, -615, 725, 540, -238,
        -1862, 1693, 1954, 1383, -1694, 1635, 177, -678, -1690, -433, -2045, -1471, 719, 1389, 1679, 920, -832, -1372, -781, 1718,
        -368, 1293, 2094, 171, -314, 0, 307, -223, 191, 1344, 296, -1382, 1507, -864, 969, -528, -338, 487, 15, -95,
        -995, 1016, 1608, -790, 929, -454, 1061, -961, 1111, -1282, 1559, -536, -1251, 2044, -120, -211, -21, -1454, 184, -708,
        1771, -294, 1227, 1181, 1645, 1871, 14, 1433, -1973, -1982, -444, 645, -1416, -1315, -514, -153, 254, 1335, -494, -1589,
        -1775, 100, 459, -483, 170, 978, 1045, 1219, -2028, -1742, -1662, -229, -1072, -289, 789, -419, -1313, 2096, -483, -1413,
        -1469, 2140, -46, -581, -800, -439, -818, 1917, 1346, -1602, -1860, 1149, -789, -24, 1694, -886, -1101, 433, -1192, -731,
        882, 630, -566, -1888, -1021, 1108, 1073, 659, 194, 425, 415, -1615, -1065, 1508, -143, 1332, 250, 1871, -1861, -670,
        -509, -925, 2097, -1067, -320, 1265, -1818, 812, 1343, 1151, -1013, -363, 1877, -2081, -421, -767, -1936, -1131, 1183, 186,
        -952, -1102, -1099, -1991, -1294, -1712, 2070, 2014, -1145, 970, -1396, -577, -212, 2147, -1436, 1330, 594, -763, -1542, 1195,
        -455, 835, -1960, -1931, 2032, -1722, -1911, -624, 60, 363, -542, 1161, 960, -618, 1856, 440, -357, -433, -589, -1083,
        1154, -2073, 1260, -1365, 1081, 1616, -270, -635, 1121, -344, 1385, 92, -344, -1224, -861, -873, -1449, -1121, 199, -1488,
        1960, 1812, 946, 1406, 776, 872, 124, -979, 1585, -1419, -1592, -1691, -1877, -2061, 1416, 2058, -379, -892, 321, 358,
        -736, -958, -1144, 2020, -1612, -183, 396, 605, 363, 1649, -1713, -776, -1207, 1656, -254, 562, 1249, -1621, 646, -106,
        -923, -144, -1066, 801, -1654, -2076, 1404, 700, 993, -422, -1413, -1026, -659, -995, -25, 748, -1069, 204, -1959, 523,
        -1473, 717, 1940, 345, -1410, -1039, -1737, -392, -330, -852, -902, -1069, 292, -2122, -2124, -878, -458, -1559, 885, -2115,
        710, -613, 1085, -1305, 1800, 1615, -1714, 769, 442, 626, -685, 1907, 1714, -257, -1813, -489, -1175, 2010, -274, 234,
        1237, -558, -222, -1567, -964, 1128, 1051, 224, -145, 845, 29, -926, 1396, -1144, -873, 527, 519, -451, 1839, -511,
        1080, -305, 506, -1062, 1839, -486, -141, 787, 903, 1418, -1993, 61, -199, -1943, -1581, 1727, 40, -59, 1108, 477,
        -551, -1643, -1446, -62, -581, -109, 2029, 1410, -1606, -1797, -1651, 749, -1367, -169, 1913, -607, -1275, -2056, -1663, 671,
        932, -1870, 1168, -357, -177, -2086, -1735, -834, -1553, 1345, 1701, 291, -1084, 582, -1721, -604, -150, -1341, 1644, 105,
        1449, 1208, 699, 1300, 1814, -696, -1225, 1094, 728, 256, 1103, -1721, 1169, 1196, -1155, 242, -1920, 1134, -1707, 2012,
        1433, -372, -167, 787, 1976, -1820, -2129, -2129, -90, 1024, -764, -1216, -563, -1971, -152, 1142, -434, -914, -1074, 979,
        -64, 1321, -1514, -845, 1281, -1186, -840, 1755, -114, 1708, 693, 1074, 1810, 1962, 807, 128, 373, 2005, -794, -488,
        117, 1699, -1992, -634, -1873, -1672, 146, 186, -1248, 291, 1958, -1081, -956, -976, -1973, 168, -2139, -1897, -1828, 13,
        -1421, 1418, -1388, 1072, -500, -408, 573, -1220, 275, -1915, 1489, -689, -1452, 803, 876, 182, -583, -1772, 88, -1742,
        2053, 845, 175, -1805, -2011, -329, 294, -791, -1573, 1879, 1357, 148, 1918, 281, 1778, 1862, 1055, 940, 1789, -342,
        -1426, 1710, -1935, -827, -1834, 188, -1304, 1388, 231, -1060, 1380, -1572, 1600, 2006, -406, -1977, 1912, -306, 481, -2102,
        428, 1333, -1051, -1556, -200, -261, -416, 509, 1845, 95, 2053, -1724, -1523, 1750, -28, 2022, -507, 1225, -1264, -932,
        617, 1024, 1465, -614, -1777, -232, -2016, 2140, 1904, 765, -1895, -1122, -1761, -1059, 1256, 490, -1385, -47, 1813, 1620,
        683, -265, 1382, -402, -1158, 271, -499, -1073, 2053, -1571, 982, -763, -1648, -2128, -597, -267, 978, -177, 310, 1628,
        777, -2135, -1882, -1183, 344, 512, 1754, -788, -1184, -680, -493, -1576, 793, 1088, 614, 1186, -1675, 1872, -842, 748,
        1815, 308, -123, 1623, -1365, 367, 1284, -1385, 1366, -582, -2119, 1162, -2046, 1397, 576, -297, 1974, -407, 627, 655,
        1761, 1954, -192, -1946, -379, 604, -1287, 1462, -179, -1422, -1229, -993, -844, 1518, 1348, 1882, -1016, 450, 822, 2088,
        -1997, 91, -1578, -243, 1876, -995, -1916, -1337, 1172, 540, 2070, 1386, -464, 509, -1410, 1194, 1243, 1243, -1833, -1556,
        1248, 2128, -1800, 728, -1621, 47, -1213, 1309, -1544, -1517, 350, 1643, 2018, 342, 1892, -640, -1656, -1954, 2051, -1862,
        1504, -255, 442, 905, -1352, 832, -1243, -154, -334, -1996, -2003, -1511, -644, 1502, -1076, -1630, -876, 1985, -227, -797,
        -283, 1023, -2065, -502, -1117, 1367, 966, -1666, -643, 304, -267, 488, 274, -1479, -1116, 533, -966, 1121, -573, -1669,
        -181, 507, -361, -1039, -1195, -1602, -249, -589, 1141, -1539, 936, -1095, 1567, 1094, 262, 2077, 583, -896, 1548, -2032,
        -2063, 392, -108, 1613, -802, -1193, 881, -885, -1644, 999, 858, 1995, -253, 1189, 1062, -1919, 1977, -1361, -486, -50,
        -2074, -2071, -1378, 1761, -1065, -2082, -1059, -350, 2033, 1409, 665, -1326, -1653, -1359, 1620, -1561, -380, 465, 1044, -1574,
        1699, 1508, -477, 1619, -1766, -1965, -536, -2036, -1687, -234, -1330, -666, 1376, -1342, -1890, 1867, 66, 245, 714, 1800,
        2076, 66, -1126, -506, -1242, 618, -1852, 691, 1405, -312, -1378, 952, 580, -293, -1079, 300, -1525, -1270, 350, -638,
        -359, 1857, 888, -1590, 2026, 651, 579, 1027, 1226, -1632, 1542, -1858, -1928, 1478, 1851, 1296, 1583, -1795, 397, -1247,
        -1837, 1886, 57, 1926, -172, -2109, -120, -2134, -1001, 292, -133, 1662, -77, 2113, 795, -945, 1335, -866, 73, -320,
        1328, 67, 120, 308, 1012, -1318, -602, -235, 1553, 1405, 1658, -1491, -798, 1799, -1862, -5, -1187, -222, 2142, 1054,
        -444, -1229, 874, -2039, 63, 753, 1006, -1722, 394, -1932, -580, 1676, 1789, -2002, -55, 1070, -590, 926, -1159, -1074,
        -1878, 168, -1085, -1722, -2125, -909, 477, -1672, 2106, 804, -1998, -1145, 1123, -567, 1167, -1715, -826, 526, -609, -1591,
        1996, 1407, -1389, -1790, 156, 1194, -233, 1704, -296, 904, -260, -1895, -1833, 344, 1585, 108, 1640, -1653, 404
};
        
    // Variables
    int max = 0, sum = 0, maxStart = 0, maxEnd = 0, size = sizeof(nums) / sizeof(int);

    // Go through array
    for (int i = 0; i < size; i++)
    {
        // Look backward
        sum = 0;
        for (int j = i; j >= 0; j--)
        {
            sum += nums[j];

            // If at any time we get a number over the max then store it
            if (sum > max)
            {
                max = sum;
                maxStart = j;
                maxEnd = i;
            }
        }
    }

    // Output result
    printf("\nOutput: Sum = %d, Subarray Indices = [%d, %d].\n", max, maxStart, maxEnd);
    return(0);
}
